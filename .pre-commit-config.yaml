# This config file uses `repo: local` to ensure that all tools
# use the same versions both locally and in the pre-commit hooks.
# Since local repos cannot use the `.pre-commit-hooks.yaml` file,
# we have to manually define the hooks here, based on the hooks
# as defined in the tools' upstream repo.

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
      - id: check-json
      - id: check-toml
      - id: check-yaml
      - id: end-of-file-fixer
      - id: mixed-line-ending
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      # See https://github.com/pre-commit/mirrors-mypy/blob/main/.pre-commit-hooks.yaml
     - id: mypy
       types_or: [ python, pyi ]
       args: ["--ignore-missing-imports", "--scripts-are-modules"]
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.0.292
    hooks:
      - id: ruff
        args: [ --fix, --exit-non-zero-on-fix ]
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
    - id: bandit
      args: [ "-c", "pyproject.toml" ]
      additional_dependencies: ["bandit[toml]"]
  - repo: https://github.com/jazzband/pip-tools
    rev: 7.3.0
    hooks:
      - id: pip-compile
        name: pip-compile pyproject.toml
        args: ["--strip-extras", pyproject.toml]
        files: ^(pyproject\.toml|requirements\.txt)$
      - id: pip-compile
        name: pip-compile requirements-dev.txt
        args:
          - --extra=dev
          - --output-file=requirements-dev.txt
          - pyproject.toml
        files: ^(pyproject\.toml|requirements-dev\.txt)$
