[build-system]
requires = ["setuptools>=45", "setuptools-scm[toml]>=7.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lakefs-spec"
description = "An fsspec implementation for lakeFS."
keywords = ["lakeFS", "fsspec"]
requires-python = ">=3.9"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [
    { name = "appliedAI Institute for Europe", email = "lakefs-spec@appliedai-institute.de" },
]
maintainers = [
    { name = "Nicholas Junge", email = "n.junge@appliedai-institute.de" },
    { name = "Max Mynter", email = "m.mynter@appliedai-institute.de" },
    { name = "Adrian Rumpold", email = "a.rumpold@appliedai-institute.de" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
    "Typing :: Typed",
]

dependencies = ["fsspec>=2023.12.0", "lakefs>=0.2.0"]

dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/aai-institute/lakefs-spec"
Repository = "https://github.com/aai-institute/lakefs-spec.git"
Issues = "https://github.com/aai-institute/lakefs-spec/issues"
Discussions = "https://github.com/aai-institute/lakefs-spec/discussions"
Documentation = "https://lakefs-spec.org/latest"

[project.optional-dependencies]
dev = [
    "build>=0.10.0",
    "pre-commit>=3.3.3",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pydoclint",
    # for integration tests.
    "pandas[parquet]",
    "polars",
    "duckdb<=0.10.0",  # due to https://github.com/duckdb/duckdb/issues/11875
]
docs = [
    "mkdocs",
    "mkdocs-callouts",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mkdocs-git-revision-date-localized-plugin",
    "mkdocs-include-dir-to-nav",
    "neoteroi-mkdocs",
    "mknotebooks",
    "jupyter",
    "jupytext",                                  # conversion between Jupytext and ipynb notebooks
    "black",                                     # formatting of signatures in docs
    "mike",
    "appnope",                                   # required only on Darwin, but need to include in lockfile
    "docstring-parser",
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
lakefs_spec = ["py.typed"]

# Automatically determine version number from Git tags
[tool.setuptools_scm]

[tool.mypy]
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
pretty = true
python_version = "3.11"
strict_optional = false
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["yaml"]
ignore_missing_imports = true

[tool.ruff]
# explicitly set src folder for isort to understand first-party imports correctly.
src = ["src"]
line-length = 100

[tool.ruff.lint]
# Enable pycodestyle errors & warnings (`E`, `W`), Pyflakes (`F`), and isort (`I`) by default.
select = ["E", "F", "I", "W"]
ignore = [
    # Line too long
    "E501",
    # Allow capitalized variable names
    "F841",
]

[tool.ruff.lint.per-file-ignores]
# Ignore unused imports in all `__init__.py` files
"__init__.py" = ["F401"]
"docs/tutorials/*.py" = [
    "E402",
] # Imports may appear anywhere in Jupytext notebooks

[tool.bandit]
exclude_dirs = ["tests", "docs/tutorials"]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "WARNING"

[tool.pydoclint]
style = 'numpy'
exclude = '\.git|venv'

[tool.coverage.report]
exclude_also = ["@overload", "raise NotImplementedError"]
